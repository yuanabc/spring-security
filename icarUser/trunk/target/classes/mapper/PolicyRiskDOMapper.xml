<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ybinsure.icar.user.mapper.data.PolicyRiskDOMapper">
  <resultMap id="BaseResultMap" type="com.ybinsure.icar.user.model.data.PolicyRiskDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="policy_id" jdbcType="VARCHAR" property="policyId" />
    <result column="risk_code" jdbcType="VARCHAR" property="riskCode" />
    <result column="risk_name" jdbcType="VARCHAR" property="riskName" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="premium" jdbcType="DOUBLE" property="premium" />
    <result column="quantity" jdbcType="TINYINT" property="quantity" />
    <result column="unit_amount" jdbcType="INTEGER" property="unitAmount" />
    <result column="glass_type" jdbcType="TINYINT" property="glassType" />
    <result column="is_deductible" jdbcType="TINYINT" property="isDeductible" />
    <result column="deduct_premium" jdbcType="DOUBLE" property="deductPremium" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, policy_id, risk_code, risk_name, amount, premium, quantity, unit_amount, glass_type, 
    is_deductible, deduct_premium
  </sql>
  <select id="selectByExample" parameterType="com.ybinsure.icar.user.model.data.PolicyRiskDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from icar_policy_risk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from icar_policy_risk
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from icar_policy_risk
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ybinsure.icar.user.model.data.PolicyRiskDOExample">
    delete from icar_policy_risk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ybinsure.icar.user.model.data.PolicyRiskDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into icar_policy_risk (id, policy_id, risk_code, 
      risk_name, amount, premium, 
      quantity, unit_amount, glass_type, 
      is_deductible, deduct_premium)
    values (#{id,jdbcType=BIGINT}, #{policyId,jdbcType=VARCHAR}, #{riskCode,jdbcType=VARCHAR}, 
      #{riskName,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, #{premium,jdbcType=DOUBLE}, 
      #{quantity,jdbcType=TINYINT}, #{unitAmount,jdbcType=INTEGER}, #{glassType,jdbcType=TINYINT}, 
      #{isDeductible,jdbcType=TINYINT}, #{deductPremium,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.ybinsure.icar.user.model.data.PolicyRiskDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into icar_policy_risk
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="policyId != null">
        policy_id,
      </if>
      <if test="riskCode != null">
        risk_code,
      </if>
      <if test="riskName != null">
        risk_name,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="premium != null">
        premium,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="unitAmount != null">
        unit_amount,
      </if>
      <if test="glassType != null">
        glass_type,
      </if>
      <if test="isDeductible != null">
        is_deductible,
      </if>
      <if test="deductPremium != null">
        deduct_premium,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="policyId != null">
        #{policyId,jdbcType=VARCHAR},
      </if>
      <if test="riskCode != null">
        #{riskCode,jdbcType=VARCHAR},
      </if>
      <if test="riskName != null">
        #{riskName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="premium != null">
        #{premium,jdbcType=DOUBLE},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=TINYINT},
      </if>
      <if test="unitAmount != null">
        #{unitAmount,jdbcType=INTEGER},
      </if>
      <if test="glassType != null">
        #{glassType,jdbcType=TINYINT},
      </if>
      <if test="isDeductible != null">
        #{isDeductible,jdbcType=TINYINT},
      </if>
      <if test="deductPremium != null">
        #{deductPremium,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ybinsure.icar.user.model.data.PolicyRiskDOExample" resultType="java.lang.Long">
    select count(*) from icar_policy_risk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update icar_policy_risk
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.policyId != null">
        policy_id = #{record.policyId,jdbcType=VARCHAR},
      </if>
      <if test="record.riskCode != null">
        risk_code = #{record.riskCode,jdbcType=VARCHAR},
      </if>
      <if test="record.riskName != null">
        risk_name = #{record.riskName,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.premium != null">
        premium = #{record.premium,jdbcType=DOUBLE},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=TINYINT},
      </if>
      <if test="record.unitAmount != null">
        unit_amount = #{record.unitAmount,jdbcType=INTEGER},
      </if>
      <if test="record.glassType != null">
        glass_type = #{record.glassType,jdbcType=TINYINT},
      </if>
      <if test="record.isDeductible != null">
        is_deductible = #{record.isDeductible,jdbcType=TINYINT},
      </if>
      <if test="record.deductPremium != null">
        deduct_premium = #{record.deductPremium,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update icar_policy_risk
    set id = #{record.id,jdbcType=BIGINT},
      policy_id = #{record.policyId,jdbcType=VARCHAR},
      risk_code = #{record.riskCode,jdbcType=VARCHAR},
      risk_name = #{record.riskName,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DOUBLE},
      premium = #{record.premium,jdbcType=DOUBLE},
      quantity = #{record.quantity,jdbcType=TINYINT},
      unit_amount = #{record.unitAmount,jdbcType=INTEGER},
      glass_type = #{record.glassType,jdbcType=TINYINT},
      is_deductible = #{record.isDeductible,jdbcType=TINYINT},
      deduct_premium = #{record.deductPremium,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ybinsure.icar.user.model.data.PolicyRiskDO">
    update icar_policy_risk
    <set>
      <if test="policyId != null">
        policy_id = #{policyId,jdbcType=VARCHAR},
      </if>
      <if test="riskCode != null">
        risk_code = #{riskCode,jdbcType=VARCHAR},
      </if>
      <if test="riskName != null">
        risk_name = #{riskName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="premium != null">
        premium = #{premium,jdbcType=DOUBLE},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=TINYINT},
      </if>
      <if test="unitAmount != null">
        unit_amount = #{unitAmount,jdbcType=INTEGER},
      </if>
      <if test="glassType != null">
        glass_type = #{glassType,jdbcType=TINYINT},
      </if>
      <if test="isDeductible != null">
        is_deductible = #{isDeductible,jdbcType=TINYINT},
      </if>
      <if test="deductPremium != null">
        deduct_premium = #{deductPremium,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ybinsure.icar.user.model.data.PolicyRiskDO">
    update icar_policy_risk
    set policy_id = #{policyId,jdbcType=VARCHAR},
      risk_code = #{riskCode,jdbcType=VARCHAR},
      risk_name = #{riskName,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DOUBLE},
      premium = #{premium,jdbcType=DOUBLE},
      quantity = #{quantity,jdbcType=TINYINT},
      unit_amount = #{unitAmount,jdbcType=INTEGER},
      glass_type = #{glassType,jdbcType=TINYINT},
      is_deductible = #{isDeductible,jdbcType=TINYINT},
      deduct_premium = #{deductPremium,jdbcType=DOUBLE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>